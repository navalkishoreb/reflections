How did viewing a diff between two versions of a file help you see the bug that was introduced?

diff command displayed only the lines which have been modified in two version of files.
This helped in ignoring common text or code.
We only have to concentrate on changes that may have raised bug, since it was working as desired in the previous version.

Line by line comparison helps in evaluating changes that have been made.
We can compare and ponder what might have caused problem.

Like in example space and spacr.
--------------------------------------------------------------------------------

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Versioning entire history creates a timeline for the product. It helps in jumping to desired version and investigate backward compatibility issues with older versions in use.
It also reveals persons and exact changes that have been performed.
It also act as a backup and restore if some feature was removed in current version, but now is a requirement in new versions; we can compare and extract those required changes.
--------------------------------------------------------------------------------

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
 -We would have more logical checkpoint.
 -Source code would be able to build without causing compile-time exceptions.
 -It provide flexibility to create big and small commits separating their concern.
  As in committing one line bug fix to multiple files for a feature.

Cons:
 -developer need to make judgment how large or small a commit should be. This may raise concern over other companions and their perspective.
 -developer may forget committing at regular intervals and cause two different feature being committed in single commit, resulting higher chances of complex merge conflicts.
 --------------------------------------------------------------------------------

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

 Git is designed for controlling source code. A feature may introduce numerous classes and interfaces to make more robust and clean implementation. And  most probably a certain functionality be used elsewhere in the whole source code.

 Whereas, Google Docs are for publishing documents. A single document represent a single book or a report. If we create a new file for each chapter for that book, it would result into nightmare to introduce any changes across whole book. Even a small formatting changes will be cumbersome.
 --------------------------------------------------------------------------------

How can you use the commands git log and git diff to view the history of files?
 git log would list all commit messages with their author and timestamp.
 git diff would produce a comparison between two commit ids.

 So, one could find commit ids using git log  and use git diff to compare changes.
 --------------------------------------------------------------------------------
